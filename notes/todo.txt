
- Try to get the proper parts of libtomcrypt compiling via setup.py.

- Add cipher modes: EAX (page 46), PCB(50), CCM(53), and GCM(56)

- Make sure I'm calling *_done on everything when it gets dealocated as they may be leaking memory.

- Implement CHC hashing:
	a CHCHash class will need to call chc_register before every update

- Decide how to do implement the several different mac modes.
	1. A class for each one.
	2. A class for the hmac, and a class for all the rest (cipher based)
	3. One class for all of them specifying the mode with a kwarg:
		x = MAC('key', mode='omac', cipher='aes')
		def hmac(hash, key):
			return MAC(key, mode='hmac', hash=hash)

- Figure out how to pull the digest of a hmac without destructing it. It currently checks out against the built in hmac module for the FIRST digest, but not after that.

- Consider adding a new hash_desc that will actually serve as an adapter to a
fully python based hash being supplied to the hmac.
	